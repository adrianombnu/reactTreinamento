{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      textoFrase: 'Siga os bons e aprenda com eles.',\n      img: require(\"./src/biscoito.png\"),\n      textoBotao: 'Quebrar Biscoito'\n    };\n    _this.quebraBiscoito = _this.quebraBiscoito.bind(_assertThisInitialized(_this));\n    _this.frases = ['A sorte não tem nada a ver com nada, você não deve tornar sua alma cativa desse ilusório conceito.', 'A sorte favorece só à mente preparada.', 'O destino tem a mesma lei para todos: tira à sorte entre o humilde e o grande; a sua urna é vasta e contém todos os nomes.', 'A sorte é uma coincidência do cruzamento das linhas paralelas do destino.', 'Sorte é o que acontece quando a preparação encontra a oportunidade.', 'Herói é o sujeito que teve a sorte de escapar vivo.', 'É preciso possuir mais virtudes para manter a boa sorte do que para suportar a má sorte.', 'A sorte combate sempre do lado do prudente.', 'Ninguém pode manter a sorte imóvel e fazê-la durar.', 'A persistência é o caminho do êxito.', 'Só existe um êxito: a capacidade de levar a vida que se quer.', 'A vitalidade é demonstrada não apenas pela persistência, mas pela capacidade de começar de novo.', 'A coragem não é ausência do medo; é a persistência apesar do medo.', 'O homem não teria alcançado o possível se, repetidas vezes, não tivesse tentado o impossível.', 'Lute com determinação, abrace a vida com paixão, perca com classe e vença com ousadia, porque o mundo pertence a quem se atreve e a vida é muito para ser insignificante.', 'O sucesso tem uma estranha capacidade de esconder o erro.', 'Uma autoimagem forte e positiva é a melhor preparação possível para o sucesso.', 'Creia em si, mas não duvide sempre dos outros.', 'As únicas grandes companhias que conseguirão ter êxito são aquelas que consideram os seus produtos obsoletos antes que os outros o façam.', 'Não espere, ponha em prática!'];\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"quebraBiscoito\",\n    value: function quebraBiscoito() {\n      var numeroAleatorio = Math.floor(Math.random() * this.frases.length);\n      this.setState({\n        textoFrase: ' \"' + this.frases[numeroAleatorio] + '\" ',\n        img: require(\"./src/biscoitoAberto.png\")\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: styles.imgViewArea,\n          children: _jsx(Image, {\n            source: this.state.img,\n            style: styles.img\n          })\n        }), _jsx(View, {\n          style: styles.txtViewArea,\n          children: _jsx(Text, {\n            style: styles.textoFrase,\n            children: this.state.textoFrase\n          })\n        }), _jsx(View, {\n          style: styles.btnViewArea,\n          children: _jsx(TouchableOpacity, {\n            style: styles.botao,\n            onPress: this.quebraBiscoito,\n            children: _jsx(View, {\n              style: styles.btnArea,\n              children: _jsx(Text, {\n                style: styles.btnTexto,\n                children: this.state.textoBotao\n              })\n            })\n          })\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#EEDF21',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imgViewArea: {\n    flex: 2,\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  img: {\n    width: 200,\n    height: 200\n  },\n  txtViewArea: {\n    flex: 1\n  },\n  textoFrase: {\n    fontSize: 20,\n    color: '#900C3F',\n    margin: 30,\n    fontStyle: 'italic',\n    textAlign: 'center'\n  },\n  btnViewArea: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  botao: {\n    width: 230,\n    height: 50,\n    borderWidth: 2,\n    borderColor: '#900C3F',\n    borderRadius: 25\n  },\n  btnArea: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  btnTexto: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#900C3F'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/adria/Desktop/react/reactTreinamento/biscoitoDaSorte/App.js"],"names":["React","Component","App","props","state","textoFrase","img","require","textoBotao","quebraBiscoito","bind","frases","numeroAleatorio","Math","floor","random","length","setState","styles","container","imgViewArea","txtViewArea","btnViewArea","botao","btnArea","btnTexto","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","fontSize","color","margin","fontStyle","textAlign","borderWidth","borderColor","borderRadius","flexDirection","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  TouchableOpacity\n} from 'react-native';\n \n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n\n      textoFrase: 'Siga os bons e aprenda com eles.',\n      img : require('./src/biscoito.png'),\n      textoBotao : 'Quebrar Biscoito'\n\n    };\n\n    this.quebraBiscoito = this.quebraBiscoito.bind(this);\n\n    this.frases = [\n      'A sorte não tem nada a ver com nada, você não deve tornar sua alma cativa desse ilusório conceito.',\n      'A sorte favorece só à mente preparada.',\n      'O destino tem a mesma lei para todos: tira à sorte entre o humilde e o grande; a sua urna é vasta e contém todos os nomes.',\n      'A sorte é uma coincidência do cruzamento das linhas paralelas do destino.',\n      'Sorte é o que acontece quando a preparação encontra a oportunidade.',\n      'Herói é o sujeito que teve a sorte de escapar vivo.',\n      'É preciso possuir mais virtudes para manter a boa sorte do que para suportar a má sorte.',\n      'A sorte combate sempre do lado do prudente.',\n      'Ninguém pode manter a sorte imóvel e fazê-la durar.',\n      'A persistência é o caminho do êxito.',\n      'Só existe um êxito: a capacidade de levar a vida que se quer.',\n      'A vitalidade é demonstrada não apenas pela persistência, mas pela capacidade de começar de novo.',\n      'A coragem não é ausência do medo; é a persistência apesar do medo.',\n      'O homem não teria alcançado o possível se, repetidas vezes, não tivesse tentado o impossível.',\n      'Lute com determinação, abrace a vida com paixão, perca com classe e vença com ousadia, porque o mundo pertence a quem se atreve e a vida é muito para ser insignificante.',\n      'O sucesso tem uma estranha capacidade de esconder o erro.',\n      'Uma autoimagem forte e positiva é a melhor preparação possível para o sucesso.',\n      'Creia em si, mas não duvide sempre dos outros.',\n      'As únicas grandes companhias que conseguirão ter êxito são aquelas que consideram os seus produtos obsoletos antes que os outros o façam.',\n      'Não espere, ponha em prática!'\n    \n    ];\n\n  }\n \n  quebraBiscoito(){\n\n    let numeroAleatorio = Math.floor(Math.random() * this.frases.length);\n\n    this.setState({\n      textoFrase: ' \"' + this.frases[numeroAleatorio] + '\" ',\n      img : require('./src/biscoitoAberto.png')\n\n    });\n\n  }\n\n  render(){\n    return (\n      <View style={styles.container}>\n        \n        <View style={styles.imgViewArea}>\n          \n          <Image \n            source={this.state.img}\n            style={styles.img}\n          \n          />\n        \n        </View>\n\n        <View style={styles.txtViewArea}>\n\n          <Text style={styles.textoFrase}>{this.state.textoFrase}</Text>\n\n        </View>\n        \n        <View style={styles.btnViewArea}>\n          \n          <TouchableOpacity style={styles.botao} onPress={this.quebraBiscoito}>\n\n            <View style={styles.btnArea}>\n\n              <Text style={styles.btnTexto}>{this.state.textoBotao}</Text>\n\n            </View>\n\n          </TouchableOpacity>\n        </View>\n\n      </View>\n    );\n    }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#EEDF21',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  imgViewArea:{\n    flex: 2,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  img:{       \n    width: 200,\n    height: 200\n  },\n  txtViewArea:{\n    flex: 1\n  },\n  textoFrase:{     \n    fontSize: 20,\n    color: '#900C3F',\n    margin: 30,\n    fontStyle: 'italic',\n    textAlign: 'center'     \n  },\n  btnViewArea:{\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  botao:{\n    width: 230,\n    height: 50,\n    borderWidth: 2,\n    borderColor: '#900C3F',\n    borderRadius: 25\n  },\n  btnArea:{\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  btnTexto:{\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#900C3F'\n  }\n});\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}